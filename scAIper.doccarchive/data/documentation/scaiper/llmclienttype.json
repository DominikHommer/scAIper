{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LLMClientType"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scaiper\/llmclienttype"]}],"sections":[],"kind":"symbol","metadata":{"role":"symbol","symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LLMClientType"}],"modules":[{"name":"scAIper"}],"externalID":"s:7scAIper13LLMClientTypeP","title":"LLMClientType","navigatorTitle":[{"kind":"identifier","text":"LLMClientType"}],"roleHeading":"Protocol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType"},"hierarchy":{"paths":[["doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper"]]},"topicSections":[{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(payload:to:completion:)","doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(request:endpoint:completion:)"]}],"abstract":[{"type":"text","text":"Protocol defining a general interface for sending requests to an LLM (Large Language Model) client."}],"relationshipsSections":[{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClient"]}],"references":{"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClient":{"url":"\/documentation\/scaiper\/llmclient","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClient","navigatorTitle":[{"kind":"identifier","text":"LLMClient"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LLMClient"}],"title":"LLMClient","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Concrete implementation of the "},{"type":"codeVoice","code":"LLMClientType"},{"type":"text","text":" for interacting with a language model API."}]},"logo.png":{"alt":"An icon representing the scAIper framework.","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.dominikhommer.scAIper\/logo.png"}],"type":"image"},"doc://com.dominikhommer.scAIper/documentation/scAIper":{"kind":"symbol","abstract":[{"type":"codeVoice","code":"scAIper"},{"type":"text","text":" is an iOS app designed to scan, extract, and analyze documents such as invoices, contracts, payslips, and reports using advanced OCR and AI-based natural-language processing techniques."}],"title":"scAIper","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper","url":"\/documentation\/scaiper"},"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClientType/send(payload:to:completion:)":{"url":"\/documentation\/scaiper\/llmclienttype\/send(payload:to:completion:)","abstract":[{"type":"text","text":"Sends a generic JSON payload to the given endpoint."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Req","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Resp","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"payload","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Req","preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7payload2to10completionyqd___10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF3ReqL_qd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Resp","preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7payload2to10completionyqd___10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF4RespL_qd_0_mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","required":true,"title":"send(payload:to:completion:)","kind":"symbol","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(payload:to:completion:)"},"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClientType":{"role":"symbol","url":"\/documentation\/scaiper\/llmclienttype","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LLMClientType","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"LLMClientType","kind":"identifier"}],"type":"topic","abstract":[{"text":"Protocol defining a general interface for sending requests to an LLM (Large Language Model) client.","type":"text"}],"identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType","title":"LLMClientType"},"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClientType/send(request:endpoint:completion:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RequestFormat"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ResponseContent"},{"kind":"text","text":">("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChatRequest","preciseIdentifier":"s:7scAIper11ChatRequestV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"RequestFormat","preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7request8endpoint10completionyAA11ChatRequestVyqd__G_10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF0J6FormatL_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"endpoint"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ResponseContent","preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7request8endpoint10completionyAA11ChatRequestVyqd__G_10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF15ResponseContentL_qd_0_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"required":true,"url":"\/documentation\/scaiper\/llmclienttype\/send(request:endpoint:completion:)","type":"topic","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(request:endpoint:completion:)","abstract":[{"type":"text","text":"Sends a structured "},{"type":"codeVoice","code":"ChatRequest"},{"type":"text","text":" to the specified LLM endpoint."}],"title":"send(request:endpoint:completion:)"}}}