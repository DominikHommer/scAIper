{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType"},"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(payload:to:completion:)","doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(request:endpoint:completion:)"],"generated":true,"title":"Instance Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LLMClientType"}]}]}],"variants":[{"paths":["\/documentation\/scaiper\/llmclienttype"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Protocol defining a general interface for sending requests to an LLM (Large Language Model) client.","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClient"],"type":"conformingTypes","title":"Conforming Types"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"LLMClientType","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LLMClientType"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LLMClientType"}],"roleHeading":"Protocol","externalID":"s:7scAIper13LLMClientTypeP","symbolKind":"protocol","modules":[{"name":"scAIper"}]},"kind":"symbol","references":{"doc://com.dominikhommer.scAIper/documentation/scAIper":{"title":"scAIper","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper","url":"\/documentation\/scaiper","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","abstract":[{"code":"scAIper","type":"codeVoice"},{"type":"text","text":" is an iOS app designed to scan, extract, and analyze documents such as invoices, contracts, payslips, and reports using advanced OCR and AI-based natural-language processing techniques."}],"role":"collection"},"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClient":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LLMClient","kind":"identifier"}],"url":"\/documentation\/scaiper\/llmclient","abstract":[{"type":"text","text":"Concrete implementation of the "},{"type":"codeVoice","code":"LLMClientType"},{"text":" for interacting with a language model API.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClient","title":"LLMClient","navigatorTitle":[{"text":"LLMClient","kind":"identifier"}],"type":"topic"},"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClientType/send(payload:to:completion:)":{"required":true,"type":"topic","role":"symbol","title":"send(payload:to:completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Req","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Resp","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"payload","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Req","kind":"typeIdentifier","preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7payload2to10completionyqd___10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF3ReqL_qd__mfp"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Resp","kind":"typeIdentifier","preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7payload2to10completionyqd___10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF4RespL_qd_0_mfp"},{"text":", ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Sends a generic JSON payload to the given endpoint."}],"kind":"symbol","url":"\/documentation\/scaiper\/llmclienttype\/send(payload:to:completion:)","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(payload:to:completion:)"},"logo.png":{"identifier":"logo.png","type":"image","alt":"An icon representing the scAIper framework.","variants":[{"traits":["1x","light"],"url":"\/images\/com.dominikhommer.scAIper\/logo.png"}]},"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClientType":{"title":"LLMClientType","kind":"symbol","url":"\/documentation\/scaiper\/llmclienttype","identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType","role":"symbol","navigatorTitle":[{"text":"LLMClientType","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Protocol defining a general interface for sending requests to an LLM (Large Language Model) client."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LLMClientType","kind":"identifier"}]},"doc://com.dominikhommer.scAIper/documentation/scAIper/LLMClientType/send(request:endpoint:completion:)":{"abstract":[{"text":"Sends a structured ","type":"text"},{"code":"ChatRequest","type":"codeVoice"},{"text":" to the specified LLM endpoint.","type":"text"}],"title":"send(request:endpoint:completion:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RequestFormat"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ResponseContent"},{"kind":"text","text":">("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7scAIper11ChatRequestV","kind":"typeIdentifier","text":"ChatRequest"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7request8endpoint10completionyAA11ChatRequestVyqd__G_10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF0J6FormatL_qd__mfp","kind":"typeIdentifier","text":"RequestFormat"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"endpoint"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier","text":"URL"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7scAIper13LLMClientTypeP4send7request8endpoint10completionyAA11ChatRequestVyqd__G_10Foundation3URLVys6ResultOyqd_0_s5Error_pGctSERd__SeRd_0_r0_lF15ResponseContentL_qd_0_mfp","kind":"typeIdentifier","text":"ResponseContent"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.dominikhommer.scAIper\/documentation\/scAIper\/LLMClientType\/send(request:endpoint:completion:)","type":"topic","url":"\/documentation\/scaiper\/llmclienttype\/send(request:endpoint:completion:)","kind":"symbol","required":true}}}